# ‚úÖ STEP 1: Install required packages
!pip install flask pyngrok --quiet

# ‚úÖ STEP 2: Ask for Ngrok token securely
from getpass import getpass
NGROK_AUTH_TOKEN = getpass("üîê Enter your NGROK auth token: ")

# ‚úÖ STEP 3: Project setup (folders and files)
import os

os.makedirs('templates', exist_ok=True)
os.makedirs('static', exist_ok=True)
os.makedirs('data', exist_ok=True)

with open('data/courses.json', 'w') as f:
    f.write('''[
  {
    "id": 1,
    "title": "Python for Beginners",
    "description": "Learn Python from scratch.",
    "instructor": "Alice Johnson",
    "duration": "6 weeks"
  },
  {
    "id": 2,
    "title": "Intro to Web Development",
    "description": "HTML, CSS, and JavaScript basics.",
    "instructor": "Bob Smith",
    "duration": "4 weeks"
  }
]''')

with open('templates/index.html', 'w') as f:
    f.write('''
<!DOCTYPE html>
<html>
<head>
  <title>Online Learning Platform</title>
  <link rel="stylesheet" href="/static/style.css">
</head>
<body>
  <h1>Welcome to LearnOnline</h1>
  <div class="course-list">
    {% for course in courses %}
      <div class="course-card">
        <h3>{{ course.title }}</h3>
        <p>{{ course.description }}</p>
        <a href="/course/{{ course.id }}">View Course</a>
      </div>
    {% endfor %}
  </div>
</body>
</html>
''')

with open('templates/course.html', 'w') as f:
    f.write('''
<!DOCTYPE html>
<html>
<head>
  <title>{{ course.title }}</title>
  <link rel="stylesheet" href="/static/style.css">
</head>
<body>
  <h1>{{ course.title }}</h1>
  <p>{{ course.description }}</p>
  <p><strong>Instructor:</strong> {{ course.instructor }}</p>
  <p><strong>Duration:</strong> {{ course.duration }}</p>
  <a href="/">Back to all courses</a>
</body>
</html>
''')

with open('static/style.css', 'w') as f:
    f.write('''
body {
  font-family: Arial, sans-serif;
  padding: 20px;
  background: #f4f4f4;
}
h1 {
  color: #333;
}
.course-list {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
}
.course-card {
  background: #fff;
  padding: 15px;
  border: 1px solid #ddd;
  border-radius: 5px;
  width: 250px;
}
''')

with open('app.py', 'w') as f:
    f.write('''
from flask import Flask, render_template, jsonify
import json

app = Flask(__name__)

def load_courses():
    with open('data/courses.json', 'r') as f:
        return json.load(f)

@app.route('/')
def index():
    courses = load_courses()
    return render_template('index.html', courses=courses)

@app.route('/course/<int:course_id>')
def course(course_id):
    courses = load_courses()
    course = next((c for c in courses if c["id"] == course_id), None)
    if not course:
        return "Course not found", 404
    return render_template('course.html', course=course)

@app.route('/api/courses')
def api_courses():
    return jsonify(load_courses())

if __name__ == '__main__':
    app.run(debug=False, port=5000, use_reloader=False)
''')

# ‚úÖ STEP 4: Start Flask + Ngrok
from pyngrok import ngrok
import threading
import time

# Set the Ngrok auth token
ngrok.set_auth_token(NGROK_AUTH_TOKEN)

# Start Flask in a background thread
def run_app():
    os.system("python3 app.py")

thread = threading.Thread(target=run_app)
thread.start()

# Wait a moment for Flask to start
time.sleep(2)

# Connect ngrok and get public URL
public_url = ngrok.connect(5000)
print(f"\nüöÄ Your app is live at: {public_url}")
